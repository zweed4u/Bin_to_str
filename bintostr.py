#!/usr/local/bin/python3
X="0100100100100000011101110110100101101100011011000010000001101110011011110111010000100000011100000110111101110011011101000010000001100001001000000111001001100101011100110111000001101111011011100111001101100101001011100010000001001000011011110111011101100101011101100110010101110010001000000111100101101111011101010010000001100001011100100110010100100000011000100110010101101001011011100110011100100000011101110110000101110100011000110110100001100101011001000010111000100000"

X=X.replace(" ","") # no spaces allowed
assert len(X)%8==0,"Error Message: binary string is not an even multiple of 8, requires byte 0 padding"
for index in range(len(X)):
	if index+1==8: # first byte
		print(chr(int(X[:index+1], 2)),end='')
	elif (index+1)%8==0:
		print(chr(int(X[index-7:index+1], 2)),end='')
print()
#print(''.join(chr(int(X[i*8:i*8+8],2)) for i in range(len(X)//8))) #wow this is heaps easier lmao